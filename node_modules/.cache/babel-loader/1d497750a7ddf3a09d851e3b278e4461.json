{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = useOverlayOffset;\n\nvar _react = require(\"react\");\n\nvar _hasClass = _interopRequireDefault(require(\"dom-helpers/hasClass\"));\n\nvar _ThemeProvider = require(\"./ThemeProvider\");\n\nvar _Popover = _interopRequireDefault(require(\"./Popover\")); // This is meant for internal use.\n// This applies a custom offset to the overlay if it's a popover.\n\n\nfunction useOverlayOffset(customOffset) {\n  const overlayRef = (0, _react.useRef)(null);\n  const popoverClass = (0, _ThemeProvider.useBootstrapPrefix)(undefined, 'popover');\n  const offset = (0, _react.useMemo)(() => ({\n    name: 'offset',\n    options: {\n      offset: () => {\n        if (overlayRef.current && (0, _hasClass.default)(overlayRef.current, popoverClass)) {\n          return customOffset || _Popover.default.POPPER_OFFSET;\n        }\n\n        return customOffset || [0, 0];\n      }\n    }\n  }), [customOffset, popoverClass]);\n  return [overlayRef, [offset]];\n}\n\nmodule.exports = exports.default;","map":{"version":3,"names":["_interopRequireDefault","require","exports","__esModule","default","useOverlayOffset","_react","_hasClass","_ThemeProvider","_Popover","customOffset","overlayRef","useRef","popoverClass","useBootstrapPrefix","undefined","offset","useMemo","name","options","current","POPPER_OFFSET","module"],"sources":["C:/repos/my-app/node_modules/react-bootstrap/cjs/useOverlayOffset.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = useOverlayOffset;\n\nvar _react = require(\"react\");\n\nvar _hasClass = _interopRequireDefault(require(\"dom-helpers/hasClass\"));\n\nvar _ThemeProvider = require(\"./ThemeProvider\");\n\nvar _Popover = _interopRequireDefault(require(\"./Popover\"));\n\n// This is meant for internal use.\n// This applies a custom offset to the overlay if it's a popover.\nfunction useOverlayOffset(customOffset) {\n  const overlayRef = (0, _react.useRef)(null);\n  const popoverClass = (0, _ThemeProvider.useBootstrapPrefix)(undefined, 'popover');\n  const offset = (0, _react.useMemo)(() => ({\n    name: 'offset',\n    options: {\n      offset: () => {\n        if (overlayRef.current && (0, _hasClass.default)(overlayRef.current, popoverClass)) {\n          return customOffset || _Popover.default.POPPER_OFFSET;\n        }\n\n        return customOffset || [0, 0];\n      }\n    }\n  }), [customOffset, popoverClass]);\n  return [overlayRef, [offset]];\n}\n\nmodule.exports = exports.default;"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkBC,gBAAlB;;AAEA,IAAIC,MAAM,GAAGL,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIM,SAAS,GAAGP,sBAAsB,CAACC,OAAO,CAAC,sBAAD,CAAR,CAAtC;;AAEA,IAAIO,cAAc,GAAGP,OAAO,CAAC,iBAAD,CAA5B;;AAEA,IAAIQ,QAAQ,GAAGT,sBAAsB,CAACC,OAAO,CAAC,WAAD,CAAR,CAArC,C,CAEA;AACA;;;AACA,SAASI,gBAAT,CAA0BK,YAA1B,EAAwC;EACtC,MAAMC,UAAU,GAAG,CAAC,GAAGL,MAAM,CAACM,MAAX,EAAmB,IAAnB,CAAnB;EACA,MAAMC,YAAY,GAAG,CAAC,GAAGL,cAAc,CAACM,kBAAnB,EAAuCC,SAAvC,EAAkD,SAAlD,CAArB;EACA,MAAMC,MAAM,GAAG,CAAC,GAAGV,MAAM,CAACW,OAAX,EAAoB,OAAO;IACxCC,IAAI,EAAE,QADkC;IAExCC,OAAO,EAAE;MACPH,MAAM,EAAE,MAAM;QACZ,IAAIL,UAAU,CAACS,OAAX,IAAsB,CAAC,GAAGb,SAAS,CAACH,OAAd,EAAuBO,UAAU,CAACS,OAAlC,EAA2CP,YAA3C,CAA1B,EAAoF;UAClF,OAAOH,YAAY,IAAID,QAAQ,CAACL,OAAT,CAAiBiB,aAAxC;QACD;;QAED,OAAOX,YAAY,IAAI,CAAC,CAAD,EAAI,CAAJ,CAAvB;MACD;IAPM;EAF+B,CAAP,CAApB,EAWX,CAACA,YAAD,EAAeG,YAAf,CAXW,CAAf;EAYA,OAAO,CAACF,UAAD,EAAa,CAACK,MAAD,CAAb,CAAP;AACD;;AAEDM,MAAM,CAACpB,OAAP,GAAiBA,OAAO,CAACE,OAAzB"},"metadata":{},"sourceType":"script"}